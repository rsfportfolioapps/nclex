/* ==========================================================================
   basic variables
   ========================================================================== */
$margin: .5em;
$container-width: 1366px;
$container-width-1441: 1200px;
$container-width-1025: 800px;
$container-width-769: 600px;
$grid-columns: 12;
$grid-screens: (
	sm : 512px,
	md : 1024px,
	xl : 1446px,
	lg : 1280px
);

.row {
	margin-right: 0;
	margin-left: 0;
}

.col {
	@for $i from $grid-columns through 1 {
		&-#{$i} {
			max-width: percentage( $i / $grid-columns);
			&-guttered {
				margin: $margin;
				max-width: calc( #{ percentage( $i / $grid-columns) } - #{ ( $margin * 2) });
			}
		}

		&-offset-#{$i} {
			margin-left: percentage( $i / $grid-columns);
		}
	}
}

@each $screen , $value in $grid-screens {
	@media only screen and (min-width: #{($value+ 1px)} ) {
		.col-#{$screen} {
			@for $i from $grid-columns through 1 {
				&-#{$i} {
					max-width: percentage( $i / $grid-columns);
					&-guttered {
						margin: $margin;
						max-width: calc( #{ percentage( $i / $grid-columns) } - #{ ( $margin * 2) });
					}
				}

				&-offset-#{$i} {
					margin-left: percentage( $i / $grid-columns);
				}
			}
		}
	}
}


.container {
	width: 100%;
	max-width: $container-width;
	margin: 0 auto;
	padding-right: 1em;
	padding-left: 1em;

	// .container-sm
	&-sm {
		max-width: 900px;
	}

	&.fluid {
		max-width: 100%;
		padding: 0;

		.colWrapper {
			width: 100%;
		}

		// supports upto 6 cols
		@for $i from 2 through 6 {
			// fluid- # - cols
			&Adj-#{$i}-cols {
				.colWrapper {
					max-width: ($container-width-1441 / $i);
					@media (max-width: 1441px) {
						max-width: ($container-width-1441 / $i);
					}

					@media (max-width: 1025px) {
						max-width: ($container-width-1025 / $i);
					}

					@media (max-width: 769px) {
						max-width: ($container-width-769 / $i);
					}
				}
			}
		}

		// set that first and last child will
		// always move to the respective places
		&[class*='fluidAdj-'] {
			[class*="col-"]:first-child {
				align-items: flex-end;
				.colWrapper {
					margin-left: auto;
				}
			}

			[class*="col-"]:last-child {
				align-items: flex-start;
				.colWrapper {
					margin-right: auto;
				}
			}
		}
	}

	@media (max-width: 1441px) {
		max-width: $container-width-1441;
	}

	@media (max-width: 1025px) {
		max-width: $container-width-1025;
	}

	@media (max-width: 769px) {
		max-width: $container-width-769;
	}
}

[class*='col-'] {
	flex-grow: 1;
	flex-shrink: 1;
	width: 100%;
}

.row {
	width: 100%;
}

// positions
.col ,
.row {
	display: flex;
	align-items: flex-start;
	flex-wrap: wrap;
	// .col-center
	// .row-center
	&-center {
		justify-content: center;
		text-align: center;
	}

	// .col-left
	// .row-left
	&-left {
		justify-content: flex-start;
		text-align: left;
	}
	// .col-right
	// .row-right
	&-right {
		text-align: right;
		justify-content: flex-end;
	}

	&-middle {
		align-items: center;
	}
}